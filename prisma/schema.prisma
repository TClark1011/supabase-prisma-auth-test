generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
    schemas   = ["auth", "public"]
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
    @@schema("public")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model AuditLogEntry {
    instance_id String?   @db.Uuid
    id          String    @id @db.Uuid
    payload     Json?     @db.Json
    created_at  DateTime? @db.Timestamptz(6)
    ip_address  String    @default("") @db.VarChar(64)

    @@index([instance_id], map: "audit_logs_instance_id_idx")
    @@map("audit_log_entries")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model FlowState {
    id                     String              @id @db.Uuid
    user_id                String?             @db.Uuid
    auth_code              String
    code_challenge_method  CodeChallengeMethod
    code_challenge         String
    provider_type          String
    provider_access_token  String?
    provider_refresh_token String?
    created_at             DateTime?           @db.Timestamptz(6)
    updated_at             DateTime?           @db.Timestamptz(6)
    authentication_method  String
    saml_relay_states      SamlRelayState[]

    @@index([created_at(sort: Desc)])
    @@index([auth_code], map: "idx_auth_code")
    @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
    @@map("flow_state")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Identity {
    id              String
    user_id         String    @db.Uuid
    identity_data   Json
    provider        String
    last_sign_in_at DateTime? @db.Timestamptz(6)
    created_at      DateTime? @db.Timestamptz(6)
    updated_at      DateTime? @db.Timestamptz(6)
    email           String?   @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
    users           User      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@id([provider, id])
    @@index([email])
    @@index([user_id])
    @@map("identities")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Instance {
    id              String    @id @db.Uuid
    uuid            String?   @db.Uuid
    raw_base_config String?
    created_at      DateTime? @db.Timestamptz(6)
    updated_at      DateTime? @db.Timestamptz(6)

    @@map("instances")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MfaAmrClaim {
    session_id            String   @db.Uuid
    created_at            DateTime @db.Timestamptz(6)
    updated_at            DateTime @db.Timestamptz(6)
    authentication_method String
    id                    String   @id(map: "amr_id_pk") @db.Uuid
    sessions              Session  @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
    @@map("mfa_amr_claims")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MfaChallenge {
    id          String    @id @db.Uuid
    factor_id   String    @db.Uuid
    created_at  DateTime  @db.Timestamptz(6)
    verified_at DateTime? @db.Timestamptz(6)
    ip_address  String    @db.Inet
    mfa_factors MfaFactor @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

    @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
    @@map("mfa_challenges")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model MfaFactor {
    id             String         @id @db.Uuid
    user_id        String         @db.Uuid
    friendly_name  String?
    factor_type    FactorType
    status         FactorStatus
    created_at     DateTime       @db.Timestamptz(6)
    updated_at     DateTime       @db.Timestamptz(6)
    secret         String?
    mfa_challenges MfaChallenge[]
    users          User           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([user_id, created_at], map: "factor_id_created_at_idx")
    @@index([user_id])
    @@map("mfa_factors")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model RefreshToken {
    instance_id String?   @db.Uuid
    id          BigInt    @id @default(autoincrement())
    token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
    user_id     String?   @db.VarChar(255)
    revoked     Boolean?
    created_at  DateTime? @db.Timestamptz(6)
    updated_at  DateTime? @db.Timestamptz(6)
    parent      String?   @db.VarChar(255)
    session_id  String?   @db.Uuid
    sessions    Session?  @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([instance_id])
    @@index([instance_id, user_id])
    @@index([parent])
    @@index([session_id, revoked])
    @@index([updated_at(sort: Desc)])
    @@map("refresh_tokens")
    @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SamlProvider {
    id                String      @id @db.Uuid
    sso_provider_id   String      @db.Uuid
    entity_id         String      @unique
    metadata_xml      String
    metadata_url      String?
    attribute_mapping Json?
    created_at        DateTime?   @db.Timestamptz(6)
    updated_at        DateTime?   @db.Timestamptz(6)
    sso_providers     SsoProvider @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([sso_provider_id])
    @@map("saml_providers")
    @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SamlRelayState {
    id              String      @id @db.Uuid
    sso_provider_id String      @db.Uuid
    request_id      String
    for_email       String?
    redirect_to     String?
    from_ip_address String?     @db.Inet
    created_at      DateTime?   @db.Timestamptz(6)
    updated_at      DateTime?   @db.Timestamptz(6)
    flow_state_id   String?     @db.Uuid
    flow_state      FlowState?  @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
    sso_providers   SsoProvider @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([created_at(sort: Desc)])
    @@index([for_email])
    @@index([sso_provider_id])
    @@map("saml_relay_states")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model SchemaMigration {
    version String @id @db.VarChar(255)

    @@map("schema_migrations")
    @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Session {
    id             String         @id @db.Uuid
    user_id        String         @db.Uuid
    created_at     DateTime?      @db.Timestamptz(6)
    updated_at     DateTime?      @db.Timestamptz(6)
    factor_id      String?        @db.Uuid
    aal            AalLevel?
    not_after      DateTime?      @db.Timestamptz(6)
    mfa_amr_claims MfaAmrClaim[]
    refresh_tokens RefreshToken[]
    users          User           @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([not_after(sort: Desc)])
    @@index([user_id])
    @@index([user_id, created_at], map: "user_id_created_at_idx")
    @@map("sessions")
    @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model SsoDomain {
    id              String      @id @db.Uuid
    sso_provider_id String      @db.Uuid
    domain          String
    created_at      DateTime?   @db.Timestamptz(6)
    updated_at      DateTime?   @db.Timestamptz(6)
    sso_providers   SsoProvider @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@index([sso_provider_id])
    @@map("sso_domains")
    @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model SsoProvider {
    id                String           @id @db.Uuid
    resource_id       String?
    created_at        DateTime?        @db.Timestamptz(6)
    updated_at        DateTime?        @db.Timestamptz(6)
    saml_providers    SamlProvider[]
    saml_relay_states SamlRelayState[]
    sso_domains       SsoDomain[]

    @@map("sso_providers")
    @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model User {
    instance_id                 String?     @db.Uuid
    id                          String      @id @db.Uuid
    aud                         String?     @db.VarChar(255)
    role                        String?     @db.VarChar(255)
    email                       String?     @db.VarChar(255)
    encrypted_password          String?     @db.VarChar(255)
    email_confirmed_at          DateTime?   @db.Timestamptz(6)
    invited_at                  DateTime?   @db.Timestamptz(6)
    confirmation_token          String?     @db.VarChar(255)
    confirmation_sent_at        DateTime?   @db.Timestamptz(6)
    recovery_token              String?     @db.VarChar(255)
    recovery_sent_at            DateTime?   @db.Timestamptz(6)
    email_change_token_new      String?     @db.VarChar(255)
    email_change                String?     @db.VarChar(255)
    email_change_sent_at        DateTime?   @db.Timestamptz(6)
    last_sign_in_at             DateTime?   @db.Timestamptz(6)
    raw_app_meta_data           Json?
    raw_user_meta_data          Json?
    is_super_admin              Boolean?
    created_at                  DateTime?   @db.Timestamptz(6)
    updated_at                  DateTime?   @db.Timestamptz(6)
    phone                       String?     @unique
    phone_confirmed_at          DateTime?   @db.Timestamptz(6)
    phone_change                String?     @default("")
    phone_change_token          String?     @default("") @db.VarChar(255)
    phone_change_sent_at        DateTime?   @db.Timestamptz(6)
    confirmed_at                DateTime?   @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
    email_change_token_current  String?     @default("") @db.VarChar(255)
    email_change_confirm_status Int?        @default(0) @db.SmallInt
    banned_until                DateTime?   @db.Timestamptz(6)
    reauthentication_token      String?     @default("") @db.VarChar(255)
    reauthentication_sent_at    DateTime?   @db.Timestamptz(6)
    is_sso_user                 Boolean     @default(false)
    deleted_at                  DateTime?   @db.Timestamptz(6)
    identities                  Identity[]
    mfa_factors                 MfaFactor[]
    sessions                    Session[]

    @@index([instance_id])
    @@map("users")
    @@schema("auth")
}

enum AalLevel {
    aal1
    aal2
    aal3

    @@map("aal_level")
    @@schema("auth")
}

enum CodeChallengeMethod {
    s256
    plain

    @@map("code_challenge_method")
    @@schema("auth")
}

enum FactorStatus {
    unverified
    verified

    @@map("factor_status")
    @@schema("auth")
}

enum FactorType {
    totp
    webauthn

    @@map("factor_type")
    @@schema("auth")
}
